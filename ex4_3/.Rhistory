}
contingency.matrix
contingency.table <- contingency.matrix %>% ftable
class(contingency.table)
chisq.test(contingency.table)
expected.table <- contingency.matrix
for(i in 1:nrow) {
for(j in 1:ncol) {
for(i in 1:nrow) {
for(j in 1:ncol) {
expected.table[i, j] <- sum(contingency.matrix[i,]) * sum(contingency.matrix[, j]) / sum(contingency.matrix)
}
}
expected.table <- expected.table %>% ftable
expected.table
expected.table <- expected.table %>% ftable
expected.table
contingency.table
contingency.matrix
contingency.table <- contingency.matrix %>% ftable
class(contingency.table)
chisq.test(contingency.table)
expected.table <- contingency.matrix
for(i in 1:nrow) {
for(j in 1:ncol) {
expected.table[i, j] <- sum(contingency.matrix[i,]) * sum(contingency.matrix[, j]) / sum(contingency.matrix)
}
}
expected.table
expected.table[i, j]
source('~/.active-rstudio-document', echo=TRUE)
for(i in 1:nrow(contingency.matrix)) {
for(j in 1:ncol(contingency.matrix)) {
expected.table[i, j] <- sum(contingency.matrix[i,]) * sum(contingency.matrix[, j]) / sum(contingency.matrix)
}
}
expected.table <- expected.table %>% ftable
expected.table
contingency.table
contingency.table - expected.table
(contingency.table - expected.table) ^ 2
(contingency.table - expected.table) ^ 2 / expected.table
((contingency.table - expected.table) ^ 2 / expected.table) %>% sum
chisq.test(contingency.table)
pchisq(133.33, 2)
pchisq(133.33, 2)
pchisq(2, 2)
1 - pchisq(2, 2)
1 - pchisq(4, 2)
qchisq(0.05, 2)
dchisq(0.05, 2)
qchisq(0.95, 2)
1 - pchisq(6, 2)
indios <- data.frame(id = rep(c("navajo", "pueblo", "apache"), each = 3),
par = rep(LETTERS[1:3], times = 3),
status = "obs", value = c(305, 52, 30, 83, 46, 100, 20, 83, 58))
contingency.matrix <- indios$value %>% matrix(nrow = 3, ncol = 3)
colnames(contingency.matrix) <- c("navajo", "pueblo", "apache")
rownames(contingency.matrix) <- LETTERS[1:3]
contingency.table <- contingency.matrix %>% ftable
expected.table <- contingency.matrix
for(i in 1:nrow(contingency.matrix)) {
for(j in 1:ncol(contingency.matrix)) {
expected.table[i, j] <- sum(contingency.matrix[i,]) * sum(contingency.matrix[, j]) / sum(contingency.matrix)
}
}
expected.table <- expected.table %>% ftable
((contingency.table - expected.table) ^ 2 / expected.table) %>% sum
chisq.test(contingency.table)
1 - pchisq(6, 2)
((contingency.table - expected.table) ^ 2 / expected.table) %>% sum
chisq.test(contingency.table)
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
length.out <- 501
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
rep(c("student", "chi", "gamma"), each = length.out)
rep(x(), times = 3)
rep(x, times = 3)
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
?eventReactive
indios <- data.frame(id = rep(c("navajo", "pueblo"), each = 3),
par = rep(LETTERS[1:3], times = 2),
status = "obs", value = c(100, 200, 300, 100, 200, 300))
contingency.matrix <- indios$value %>% matrix(nrow = 3, ncol = 2)
colnames(contingency.matrix) <- c("navajo", "pueblo")
rownames(contingency.matrix) <- LETTERS[1:3]
contingency.table <- contingency.matrix %>% ftable
expected.table <- contingency.matrix
for(i in 1:nrow(contingency.matrix)) {
for(j in 1:ncol(contingency.matrix)) {
expected.table[i, j] <- sum(contingency.matrix[i,]) * sum(contingency.matrix[, j]) / sum(contingency.matrix)
}
}
expected.table <- expected.table %>% ftable
((contingency.table - expected.table) ^ 2 / expected.table) %>% sum
chisq.test(contingency.table)
indios <- data.frame(id = rep(c("navajo", "pueblo"), each = 3),
par = rep(LETTERS[1:3], times = 2),
status = "obs", value = c(100, 200, 300, 200, 100, 300))
contingency.matrix <- indios$value %>% matrix(nrow = 3, ncol = 2)
colnames(contingency.matrix) <- c("navajo", "pueblo")
rownames(contingency.matrix) <- LETTERS[1:3]
contingency.table <- contingency.matrix %>% ftable
expected.table <- contingency.matrix
for(i in 1:nrow(contingency.matrix)) {
for(j in 1:ncol(contingency.matrix)) {
expected.table[i, j] <- sum(contingency.matrix[i,]) * sum(contingency.matrix[, j]) / sum(contingency.matrix)
}
}
expected.table <- expected.table %>% ftable
((contingency.table - expected.table) ^ 2 / expected.table) %>% sum
chisq.test(contingency.table)
((contingency.table - expected.table) ^ 2 / expected.table) %>% sum
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
shiny::runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
?checkboxGroupInput()
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
list(1, 2, 3)
list(1, 2, 3) %>% unlist
list(1:10, 2, 3) %>% unlist
list(1:10, 2, 3) %>% length
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
list(1:10, 11:20)
list(1:10, 11:20)[[]]
list(1:10, 11:20)[[1]]
list(1:10, 11:20)[[2]]
c(1, 3, 4)
c(1, 3, 4) %in% 1:4
1:4 %in% c(1, 3, 4)
list(1:10, 11:20)[2]
list(1:10, 11:20)[]
list(1:10, 11:20)[c(F, F)]
list(1:10, 11:20)[c(F, F)] %>% unlist
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
1:4 %in c(1, 3, 4)
1:4 %in% c(1, 3, 4)
c(1, 0, 1, 0) %>% which
c(1, 0, 1, 0) == 1
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
runApp('MEGA/Master/STATS/week4/exercises/ex4_1')
curve(dt(x, df=1), -5, 5, ylim=c(0, 0.4))
curve(dt(x, df=5), add=TRUE)
curve(dt(x, df=10), add=TRUE)
curve(dt(x, df=20), add=TRUE)
curve(dchisq(x, df=1), 0, 10, ylim=c(0, 0.6))
curve(dchisq(x, df=2), add=TRUE)
curve(dchisq(x, df=5), add=TRUE)
curve(dchisq(x, df=10), add=TRUE)
curve(dchisq(x, df=20), add=TRUE)
curve(dt(x, df=1), -5, 5, ylim=c(0, 0.4))
curve(dt(x, df=5), add=TRUE)
curve(dt(x, df=10), add=TRUE)
curve(dt(x, df=20), add=TRUE)
curve(dchisq(x, df=1), 0, 10, ylim=c(0, 0.6))
curve(dchisq(x, df=2), add=TRUE)
curve(dchisq(x, df=5), add=TRUE)
curve(dchisq(x, df=10), add=TRUE)
curve(dchisq(x, df=20), add=TRUE)
# 4.2
load(url("http://www.math.ku.dk/~tfb525/teaching/statbe/Mir101.RData"))
liver.miR101
HCC.miR101
mllk.normal <- function(params, data) {
-(data %>% dnorm(mean = params[1], sd = params[2], log = T) %>% sum)
}
optim(c(1, 1), mllk.normal, liver.miR101)
liver.miR101
optim(c(1, 1), mllk.normal, liver.miR101)
optim(c(1, 1), mllk.normal, data = liver.miR101)
optim(c(1, 1), mllk.normal, data = liver.miR101)
mllk.normal <- function(params, data) {
-(data %>% dnorm(mean = params[1], sd = params[2], log = T) %>% sum)
}
optim(c(1, 1), mllk.normal, data = liver.miR101)
liver.miR101
liver.miR101(dnorm)
liver.miR101 %>% dnorm
optim(c(1, 1), mllk.normal, data = liver.miR101)
library("magrittr")
load(url("http://www.math.ku.dk/~tfb525/teaching/statbe/Mir101.RData"))
liver.miR101
HCC.miR101
mllk.normal <- function(params, data) {
-(data %>% dnorm(mean = params[1], sd = params[2], log = T) %>% sum)
}
optim(c(1, 1), mllk.normal, data = liver.miR101)
x <- rnorm(20, 2, 4)
y <- rnorm(40, 2.5, 4)
xy <- c(x, y)
mllk.normal <- function(params, data) {
-(data %>% dnorm(mean = params[1], sd = params[2], log = T) %>% sum)
}
full.model.x <- optim(c(1, 1), mllk.normal, data = x)
full.model.x
mllk.normal <- function(params, data) {
-(data %>% dnorm(mean = params[1], sd = params[2], log = T) %>% sum)
}
optim(c(1, 1), mllk.normal, data = liver.miR101)
x
liver.miR101
liver.miR101
HCC.miR101
lines(density(liver.miR101))
lines(density(liver.miR101))
density(liver.miR101)
plot(density(liver.miR101))
density(liver.miR101)$y
lower <- -3
upper <- 5
length.out <- 501
load(url("http://www.math.ku.dk/~tfb525/teaching/statbe/Mir101.RData"))
liver.density <- density(liver.miR101, from = lower, to = upper, n = length.out)$y
liver.density <- density(liver.miR101, from = lower, to = upper, n = length.out)$y
cancer.density <- density(HCC.miR101, from = lower, to = upper, n = length.out)$y
liver.density
x <- seq(lower, upper = length.out = length.out)
liver.density <- density(liver.miR101, from = lower, to = upper, n = length.out)$y
cancer.density <- density(HCC.miR101, from = lower, to = upper, n = length.out)$y
data <- data.frame(X = x, id = rep(c("healthy", "cancer"), each = length.out), value = c(liver.density, cancer.density))
x <- seq(lower, upper = length.out = length.out)
liver.density <- density(liver.miR101, from = lower, to = upper, n = length.out)$y
cancer.density <- density(HCC.miR101, from = lower, to = upper, n = length.out)$y
x
x <- seq(lower, upper, length.out = length.out)
liver.density <- density(liver.miR101, from = lower, to = upper, n = length.out)$y
cancer.density <- density(HCC.miR101, from = lower, to = upper, n = length.out)$y
data <- data.frame(X = x, id = rep(c("healthy", "cancer"), each = length.out), value = c(liver.density, cancer.density))
ggplot(data, aes(x = X, y = value, col = id)) + geom_point()
library("ggplot2")
ggplot(data, aes(x = X, y = value, col = id)) + geom_point()
theme_set(theme_bw(base_size = 20))
x <- seq(lower, upper, length.out = length.out)
liver.density <- density(liver.miR101, from = lower, to = upper, n = length.out)$y
cancer.density <- density(HCC.miR101, from = lower, to = upper, n = length.out)$y
data <- data.frame(X = x, id = rep(c("healthy", "cancer"), each = length.out), value = c(liver.density, cancer.density))
ggplot(data, aes(x = X, y = value, col = id)) + geom_point()
ggplot(data, aes(x = X, y = value, col = id, fill = id)) + geom_line()
ggplot(data, aes(x = X, y = value, col = id, fill = id)) + geom_line() + geom_area()
ggplot(data, aes(x = X, y = value, col = id, fill = id)) + geom_line() + geom_area(alpha = 0.5)
ggplot(data, aes(x = X, y = value, col = id, fill = id)) +
geom_line() +
geom_area(alpha = 0.5)
ggplot(data, aes(x = X, y = value, col = id, fill = id)) +
geom_line() +
geom_area(alpha = 0.5, "identity")
ggplot(data, aes(x = X, y = value, col = id, fill = id)) +
geom_line() +
geom_area(alpha = 0.5, position = "identity")
x <- rnorm(20, 2, 4)
optim(c(1, 1), mllk.normal, data = x)
optim(c(1, 1), mllk.normal, data = liver.miR101)
x
liver.miR101
mllk.normal <- function(params, data) {
-(data %>% dnorm(mean = params[1], sd = params[2]) %>% sum)
}
optim(c(1, 1), mllk.normal, data = liver.miR101)
warnings()
mllk.normal <- function(params, data) {
data %>% dnorm(mean = params[1], sd = params[2])
}
optim(c(1, 1), mllk.normal, data = liver.miR101)
mllk.normal <- function(params, data) {
data %>% dnorm(mean = params[1], sd = params[2]) %>% log %>% sum
}
optim(c(1, 1), mllk.normal, data = liver.miR101)
x <- seq(lower, upper, length.out = length.out)
liver.density <- density(liver.miR101, from = lower, to = upper, n = length.out)$y
cancer.density <- density(HCC.miR101, from = lower, to = upper, n = length.out)$y
data <- data.frame(X = x, id = rep(c("healthy", "cancer"), each = length.out), value = c(liver.density, cancer.density))
ggplot(data, aes(x = X, y = value, col = id, fill = id)) +
geom_line() +
geom_area(alpha = 0.5, position = "identity")
mllk.normal <- function(params, data) {
-(data %>% dnorm(mean = params[1], sd = params[2], log = T) %>% sum)
}
optim(c(1, 1), mllk.normal, data = liver.miR101)
mean(liver.miR101)
sd(liver.miR101)
length(liver.miR101)
sd(liver.miR101) * 19  /20
library("magrittr")
library("ggplot2")
theme_set(theme_bw(base_size = 20))
# lower <- -3
# upper <- 5
# length.out <- 501
load(url("http://www.math.ku.dk/~tfb525/teaching/statbe/Mir101.RData"))
# x <- seq(lower, upper, length.out = length.out)
# liver.density <- density(liver.miR101, from = lower, to = upper, n = length.out)$y
# cancer.density <- density(HCC.miR101, from = lower, to = upper, n = length.out)$y
# data <- data.frame(X = x, id = rep(c("healthy", "cancer"), each = length.out), value = c(liver.density, cancer.density))
#
# ggplot(data, aes(x = X, y = value, col = id, fill = id)) +
#   geom_line() +
#   geom_area(alpha = 0.5, position = "identity")
#
# mllk.normal <- function(params, data) {
#   -(data %>% dnorm(mean = params[1], sd = params[2], log = T) %>% sum)
# }
#
# optim(c(1, 1), mllk.normal, data = liver.miR101)
#
#
# liver.miR101 %>% dnorm
mean(liver.miR101) - qt(0.995, df = length(liver.miR101) - 1) * sd(liver.miR101)/sqrt(length(liver.miR101))
mean(liver.miR101) + qt(0.995, df = length(liver.miR101) - 1) * sd(liver.miR101)/sqrt(length(liver.miR101))
mean(HCC.miR101) - qt(0.995, df = length(HCC.miR101) - 1) * sd(HCC.miR101)/sqrt(length(HCC.miR101))
mean(HCC.miR101) + qt(0.995, df = length(HCC.miR101) - 1) * sd(HCC.miR101)/sqrt(length(HCC.miR101))
t.test(liver.miR101, HCC.miR101)
data <- list(liver.miR101, HCC.miR101)
inferior <- numeric()
superior <- numeric()
data <- list(liver.miR101, HCC.miR101)
i <- 1
for (condition in data) {
inferior[i] <- mean(condition) - qt(0.995, df = length(condition) - 1) * sd(condition)/sqrt(length(condition))
superior[i] <- mean(condition) + qt(0.995, df = length(condition) - 1) * sd(condition)/sqrt(length(condition))
i <- i + 1
}
inferior
data <- data.frame(id = rep(c("healthy", "cancer"), each = 2),
bound = rep(c("inferior", "superior"), times = 2),
value = c(inferior, superior))
t.test(liver.miR101, HCC.miR101)
ggplot(data) + geom_errorbar(aes(ymin = inferior, ymax = superior, x = id))
ggplot(data) + geom_errorbar(aes(ymin = inferior, ymax = superior))
data
ggplot(data, aes(y = value, x = id)) + geom_errorbar(aes(ymin = inferior, ymax = superior))
ggplot(data, aes(y = value, x = C(1, 1, 2, 2))) + geom_errorbar(aes(ymin = inferior, ymax = superior))
ggplot(data, aes(y = value, x = C(1, 1, 2, 2))) + geom_errorbar(aes(ymin = inferior, ymax = superior))
ggplot(data, aes(y = value, x = c(1, 1, 2, 2))) + geom_errorbar(aes(ymin = inferior, ymax = superior))
data <- data.frame(id = rep(c("healthy", "cancer"), each = 2),
X = c(1, 1, 2, 2),
bound = rep(c("inferior", "superior"), times = 2),
value = c(inferior, superior))
t.test(liver.miR101, HCC.miR101)
ggplot(data, aes(y = value, x = X)) + geom_errorbar(aes(ymin = inferior, ymax = superior))
data <- data.frame(id = rep(c("healthy", "cancer"), each = 2),
X = c(1, 1, 2, 2),
L = inferior,
U = superior)
data
data <- data.frame(id = rep(c("healthy", "cancer"), each = 2),
X = c(1, 1, 2, 2),
L = inferior,
U = superior)
t.test(liver.miR101, HCC.miR101)
ggplot(data, aes(x = X)) + geom_errorbar(aes(ymin = inferior, ymax = superior))
data <- data.frame(id = rep(c("healthy", "cancer"), each = 2),
L = inferior,
U = superior)
t.test(liver.miR101, HCC.miR101)
ggplot(data, aes(x = id)) + geom_errorbar(aes(ymin = inferior, ymax = superior))
data
data <- data.frame(id = rep(c("healthy", "cancer"), each = 2),
L = inferior,
data <- data.frame(id = rep(c("healthy", "cancer"), each = 2),
L = inferior,
U = superior)
t.test(liver.miR101, HCC.miR101)
ggplot(data, aes(x = id, ymin = inferior, ymax = superior)) + geom_errorbar()
data
rep(1:2, each = 2)
data <- data.frame(X = rep(1:2, each = 2),
L = inferior,
U = superior)
t.test(liver.miR101, HCC.miR101)
ggplot(data, aes(x = X, ymin = inferior, ymax = superior)) + geom_errorbar()
data
ggplot(data[-4,], aes(x = X, ymin = inferior, ymax = superior)) + geom_errorbar()
data
data <- data.frame(id = rep(c("healthy", "cancer"), each = 2),
X = c(1, 1, 2, 2),
L = inferior,
U = superior)
t.test(liver.miR101, HCC.miR101)
ggplot(data, aes(x = id)) + geom_errorbar(aes(ymin = L, ymax = S))
ggplot(data, aes(x = id)) + geom_errorbar(aes(ymin = L, ymax = U))
data
data <- data.frame(id = c("healthy", "cancer"),
L = inferior,
U = superior)
t.test(liver.miR101, HCC.miR101)
ggplot(data, aes(x = id)) + geom_errorbar(aes(ymin = L, ymax = U))
ggplot(data, aes(x = id)) + geom_errorbar(aes(ymin = L, ymax = U)) + geom_bar(aes(y = M))
data <- data.frame(id = c("healthy", "cancer"),
M = c(mean(liver.miR101), mean(HCC.miR101)),
L = inferior,
U = superior)
t.test(liver.miR101, HCC.miR101)
ggplot(data, aes(x = id)) + geom_errorbar(aes(ymin = L, ymax = U)) + geom_bar(aes(y = M))
ggplot(data, aes(x = id)) + geom_errorbar(aes(ymin = L, ymax = U)) + geom_bar(aes(y = M), ..identity..)
ggplot(data, aes(x = id)) + geom_errorbar(aes(ymin = L, ymax = U)) + geom_bar(aes(y = M), "identity")
ggplot(data, aes(x = id)) + geom_errorbar(aes(ymin = L, ymax = U)) + geom_bar(aes(y = M))
ggplot(data, aes(x = id)) + geom_errorbar(aes(ymin = L, ymax = U)) + geom_bar(stat = "identity", aes(y = M))
ggplot(data, aes(x = id)) + geom_errorbar(aes(ymin = L, ymax = U)) + geom_bar(stat = "identity", aes(y = M, fill = id))
ggplot(data, aes(x = id)) + geom_errorbar(aes(ymin = L, ymax = U)) + geom_point(aes(y = M))
source('~/MEGA/Master/STATS/week4/exercises/ex4_2/ex4_2.R', echo=TRUE)
scale_y_continuous(c(lower, upper))
ggplot(data, aes(x = id)) +
geom_errorbar(aes(ymin = L, ymax = U)) +
geom_point(aes(y = M)) +
scale_y_continuous(c(lower, upper))
ggplot(data, aes(x = id)) +
geom_errorbar(aes(ymin = L, ymax = U)) +
geom_point(aes(y = M)) +
scale_y_continuous(name = "Mean",
c(lower, upper))
data
t.test(liver.miR101, HCC.miR101)
t.test(liver.miR101, HCC.miR101,
alt = "two.sided")
install.packages("pdf.tools")
install.packages("pdftools")
install.packages("pdf.tools")
install.packages("pdftools")
library("pdftools")
txt <- pdf_text("/home/antortjim/MEGA/Master/STATS/week4/week4wed.pdf")
txt
txt[33]
cat(txt[33])
txt[33]
grep(txt[33], "(\d\d      \d\d)")
regexpr(txt[33], "(\d\d      \d\d)")
regexpr(text = txt[33], pattern = "(\d\d      \d\d)")
regexpr(text = txt[33], pattern = "(\[:digit:]{2}      [:digit:]{2})")
regexpr(text = txt[33], pattern = "([:digit:]{2}      [:digit:]{2})")
grep(text = txt[33], pattern = "([:digit:]{2}      [:digit:]{2})")
grep(x = txt[33], pattern = "([:digit:]{2}      [:digit:]{2})")
txt[33]
setwd("~/MEGA/Master/STATS/week4/exercises/ex4_2/")
read.csv2(file = "tabula-week4wed.csv")
read.csv(file = "tabula-week4wed.csv")
read.csv(textConnection(lines))
textConnection(lines)
lines <- ",Die 1,Die 2
1,23,33
2,26,27
3,13,23
4,23,39
5,20,30
6,31,39"
lines
lines <- "
,Die 1,Die 2
1,23,33
2,26,27
3,13,23
4,23,39
5,20,30
6,31,39"
read.csv(textConnection(lines))
data <- read.csv(textConnection(lines))
data
data <- matrix(textConnection(lines))
data
textConnection(lines)
data <- as.matrix(textConnection(lines))
data
data <- read.csv(textConnection(lines))
chisq.test(x)
chisq.test(data[, 2:3])
data[, 2:3]
chisq.test(cbind(c(23, 26, 13, 23, 20, 31),
c(33, 27, 23, 39, 30, 39)))
chisq.test(data[, 2:3])
source('~/MEGA/Master/STATS/week4/exercises/ex4_3/ex4_3.R', echo=TRUE)
